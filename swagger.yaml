openapi: 3.0.3
info:
  title: API Biblioteca Digital
  version: 1.0.0
  description: API para consulta e gerenciamento de livros
servers:
  - url: http://localhost:3000
paths:
  /usuarios:
    get:
      tags:
        - Usuários
      summary: Lista todos os usuários
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
  /usuarios/{id}:
    get:
      tags:
        - Usuários
      summary: Obtém um usuário pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioInput'
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
    delete:
      tags:
        - Usuários
      summary: Remove um usuário
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuário removido
  /emprestimos:
    get:
      tags:
        - Empréstimos
      summary: Lista todos os empréstimos
      responses:
        '200':
          description: Lista de empréstimos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emprestimo'
    post:
      tags:
        - Empréstimos
      summary: Cria um novo empréstimo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmprestimoInput'
      responses:
        '201':
          description: Empréstimo criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emprestimo'
  /emprestimos/{id}:
    get:
      tags:
        - Empréstimos
      summary: Obtém um empréstimo pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Empréstimo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emprestimo'
        '404':
          description: Empréstimo não encontrado
  /emprestimos/{id}/devolucao:
    put:
      tags:
        - Empréstimos
      summary: Devolve um livro emprestado
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Livro devolvido com sucesso
  /autores:
    get:
      tags:
        - Autores
      summary: Lista todos os autores
      responses:
        '200':
          description: Lista de autores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Autor'
    post:
      tags:
        - Autores
      summary: Cria um novo autor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorInput'
      responses:
        '201':
          description: Autor criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
  /autores/{id}:
    get:
      tags:
        - Autores
      summary: Obtém um autor pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Autor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
        '404':
          description: Autor não encontrado
    put:
      tags:
        - Autores
      summary: Atualiza um autor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorInput'
      responses:
        '200':
          description: Autor atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'
        '404':
          description: Autor não encontrado
    delete:
      tags:
        - Autores
      summary: Remove um autor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Autor removido
  /livros:
    get:
      tags:
        - Livros
      summary: Lista todos os livros
      parameters:
        - in: query
          name: autor
          schema:
            type: string
          description: Filtrar por nome do autor
        - in: query
          name: disponivel
          schema:
            type: boolean
          description: Filtrar por disponibilidade
        - in: query
          name: page
          schema:
            type: integer
          description: Página para paginação
        - in: query
          name: size
          schema:
            type: integer
          description: Tamanho da página
        - in: query
          name: sort
          schema:
            type: string
          description: Campo para ordenação
        - in: query
          name: order
          schema:
            type: string
            enum: [asc, desc]
          description: Ordem de ordenação
      responses:
        '200':
          description: Lista de livros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Livro'
    post:
      tags:
        - Livros
      summary: Cria um novo livro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivroInput'
      responses:
        '201':
          description: Livro criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  _links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
  /livros/{id}:
    get:
      tags:
        - Livros
      summary: Obtém um livro pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Livro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livro'
        '404':
          description: Livro não encontrado
    put:
      tags:
        - Livros
      summary: Atualiza um livro
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivroInput'
      responses:
        '200':
          description: Livro atualizado
    delete:
      tags:
        - Livros
      summary: Remove um livro
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Livro removido
tags:
  - name: Livros
    description: Operações relacionadas a livros
  - name: Autores
    description: Operações relacionadas a autores
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
    UsuarioInput:
      type: object
      required:
        - nome
        - email
      properties:
        nome:
          type: string
        email:
          type: string
    Emprestimo:
      type: object
      properties:
        id:
          type: integer
        usuario_id:
          type: integer
        livro_id:
          type: integer
        data_emprestimo:
          type: string
          format: date
        data_devolucao:
          type: string
          format: date
        devolvido:
          type: boolean
    EmprestimoInput:
      type: object
      required:
        - usuario_id
        - livro_id
      properties:
        usuario_id:
          type: integer
        livro_id:
          type: integer
    Autor:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
    AutorInput:
      type: object
      required:
        - nome
      properties:
        nome:
          type: string
    Livro:
      type: object
      properties:
        id:
          type: integer
        titulo:
          type: string
        isbn:
          type: string
        ano_publicacao:
          type: integer
        disponivel:
          type: boolean
        autor:
          $ref: '#/components/schemas/Autor'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    LivroInput:
      type: object
      required:
        - titulo
        - isbn
        - ano_publicacao
        - autor_id
      properties:
        titulo:
          type: string
        isbn:
          type: string
        ano_publicacao:
          type: integer
        disponivel:
          type: boolean
        autor_id:
          type: integer
    Link:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        method:
          type: string
